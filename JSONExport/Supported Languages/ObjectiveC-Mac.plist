<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>arrayType</key>
	<string>NSArray</string>
	<key>basicTypesWithSpecialFetchingNeeds</key>
	<array>
		<string>NSInteger</string>
		<string>BOOL</string>
		<string>char</string>
		<string>CGFloat</string>
		<string>double</string>
		<string>long</string>
	</array>
	<key>basicTypesWithSpecialFetchingNeedsReplacements</key>
	<array>
		<string>integerValue</string>
		<string>boolValue</string>
		<string>charValue</string>
		<string>floatValue</string>
		<string>doubleValue</string>
		<string>longValue</string>
	</array>
	<key>basicTypesWithSpecialStoringNeeds</key>
	<array>
		<string>NSInteger</string>
		<string>BOOL</string>
		<string>char</string>
		<string>CGFloat</string>
		<string>double</string>
		<string>long</string>
	</array>
	<key>briefDescription</key>
	<string>Defines how your JSON objects can be mapped to Objective-c classes using the built-in NSJSONSerialization class</string>
	<key>constructors</key>
	<array>
		<dict>
			<key>bodyEnd</key>
			<string>
	return self;
}
</string>
			<key>bodyStart</key>
			<string>{
	self = [super init];</string>
			<key>comment</key>
			<string>
/**
 * Instantiate the instance using the passed dictionary values to set the properties values
 */
</string>
			<key>fetchArrayOfCustomTypePropertyFromMap</key>
			<string>
	if(dictionary[@"&lt;!JsonKeyName!&gt;"] != nil &amp;&amp; ![dictionary[@"&lt;!JsonKeyName!&gt;"] isKindOfClass:[NSNull class]]){
		NSArray * &lt;!VarName!&gt;Dictionaries = dictionary[@"&lt;!JsonKeyName!&gt;"];
		NSMutableArray * &lt;!VarName!&gt;Items = [NSMutableArray array];
		for(NSDictionary * &lt;!VarName!&gt;Dictionary in &lt;!VarName!&gt;Dictionaries){
			&lt;!ElementType!&gt; * &lt;!VarName!&gt;Item = [[&lt;!ElementType!&gt; alloc] initWithDictionary:&lt;!VarName!&gt;Dictionary];
			[&lt;!VarName!&gt;Items addObject:&lt;!VarName!&gt;Item];
		}
		self.&lt;!VarName!&gt; = &lt;!VarName!&gt;Items;
	}</string>
			<key>fetchBasicTypePropertyFromMap</key>
			<string>
	if(![dictionary[@"&lt;!JsonKeyName!&gt;"] isKindOfClass:[NSNull class]]){
		self.&lt;!VarName!&gt; = dictionary[@"&lt;!JsonKeyName!&gt;"];
	}
</string>
			<key>fetchBasicTypeWithSpecialNeedsPropertyFromMap</key>
			<string>
	if(![dictionary[@"&lt;!JsonKeyName!&gt;"] isKindOfClass:[NSNull class]]){
		self.&lt;!VarName!&gt; = [dictionary[@"&lt;!JsonKeyName!&gt;"] &lt;!VarBasicTypeReplacement!&gt;];
	}
</string>
			<key>fetchCustomTypePropertyFromMap</key>
			<string>
	if(![dictionary[@"&lt;!JsonKeyName!&gt;"] isKindOfClass:[NSNull class]]){
		self.&lt;!VarName!&gt; = [[&lt;!VarType!&gt; alloc] initWithDictionary:dictionary[@"&lt;!JsonKeyName!&gt;"]];
	}
</string>
			<key>signature</key>
			<string>
-(instancetype)initWithDictionary:(NSDictionary *)dictionary
</string>
		</dict>
	</array>
	<key>dataTypes</key>
	<dict>
		<key>boolType</key>
		<string>BOOL</string>
		<key>characterType</key>
		<string>char</string>
		<key>doubleType</key>
		<string>double</string>
		<key>floatType</key>
		<string>CGFloat</string>
		<key>intType</key>
		<string>NSInteger</string>
		<key>longType</key>
		<string>long</string>
		<key>stringType</key>
		<string>NSString</string>
	</dict>
	<key>displayLangName</key>
	<string>ObjectiveC - Mac</string>
	<key>fileExtension</key>
	<string>m</string>
	<key>genericType</key>
	<string>NSObject</string>
	<key>hasHeaderFile</key>
	<true/>
	<key>headerFileData</key>
	<dict>
		<key>constructorSignatures</key>
		<array>
			<string>-(instancetype)initWithDictionary:(NSDictionary *)dictionary;
</string>
		</array>
		<key>headerFileExtension</key>
		<string>h</string>
		<key>importForEachCustomType</key>
		<string>#import "&lt;!ModelName!&gt;.h"
</string>
		<key>importParentHeaderFile</key>
		<string>#import "&lt;!ParentClass!&gt;.h"
</string>
		<key>instanceVarDefinition</key>
		<string>@property (nonatomic, strong) &lt;!VarType!&gt; * &lt;!VarName!&gt;;
</string>
		<key>instanceVarWithSpeicalDefinition</key>
		<string>@property (nonatomic, assign) &lt;!VarType!&gt; &lt;!VarName!&gt;;
</string>
		<key>modelDefinition</key>
		<string>
@interface &lt;!ModelName!&gt; : NSObject
</string>
		<key>modelDefinitionWithParent</key>
		<string>
@interface &lt;!ModelName!&gt; : &lt;!ParentClass!&gt;
</string>
		<key>modelEnd</key>
		<string>@end</string>
		<key>modelStart</key>
		<string></string>
		<key>staticImports</key>
		<string>#import &lt;AppKit/AppKit.h&gt;</string>
		<key>typesNeedSpecialDefinition</key>
		<array>
			<string>NSInteger</string>
			<string>BOOL</string>
			<string>char</string>
			<string>CGFloat</string>
			<string>double</string>
			<string>long</string>
		</array>
		<key>utilityMethodSignatures</key>
		<array>
			<string>-(NSDictionary *)toDictionary;
</string>
		</array>
	</dict>
	<key>importForEachCustomType</key>
	<string></string>
	<key>importHeaderFile</key>
	<string>#import "&lt;!ModelName!&gt;.h"
</string>
	<key>instanceVarDefinition</key>
	<string></string>
	<key>langName</key>
	<string>ObjectiveC - Mac</string>
	<key>modelDefinition</key>
	<string>
@interface &lt;!ModelName!&gt; ()
@end
@implementation &lt;!ModelName!&gt;
</string>
	<key>modelEnd</key>
	<string>@end</string>
	<key>modelStart</key>
	<string></string>
	<key>reservedKeywords</key>
	<array>
		<string>abstract</string>
		<string>assert</string>
		<string>boolean</string>
		<string>break</string>
		<string>byte</string>
		<string>case</string>
		<string>catch</string>
		<string>char</string>
		<string>class</string>
		<string>const</string>
		<string>continue</string>
		<string>default</string>
		<string>do</string>
		<string>double</string>
		<string>else</string>
		<string>enum</string>
		<string>extends</string>
		<string>false</string>
		<string>final</string>
		<string>finally</string>
		<string>float</string>
		<string>for</string>
		<string>goto</string>
		<string>if</string>
		<string>implements</string>
		<string>import</string>
		<string>instanceof</string>
		<string>int</string>
		<string>interface</string>
		<string>long</string>
		<string>native</string>
		<string>new</string>
		<string>null</string>
		<string>package</string>
		<string>private</string>
		<string>protected</string>
		<string>public</string>
		<string>return</string>
		<string>short</string>
		<string>static</string>
		<string>strictfp</string>
		<string>super</string>
		<string>switch</string>
		<string>synchronized</string>
		<string>this</string>
		<string>throw</string>
		<string>throws</string>
		<string>transient</string>
		<string>true</string>
		<string>try</string>
		<string>void</string>
		<string>volatile</string>
		<string>while</string>
		<string>id</string>
		<string>class</string>
		<string>description</string>
	</array>
	<key>staticImports</key>
	<string></string>
	<key>supportsFirstLineStatement</key>
	<string>false</string>
	<key>utilityMethods</key>
	<array>
		<dict>
			<key>body</key>
			<string>	NSMutableDictionary * dictionary = [NSMutableDictionary dictionary];
</string>
			<key>bodyEnd</key>
			<string>
}
</string>
			<key>bodyStart</key>
			<string>
{
</string>
			<key>comment</key>
			<string>
/**
 * Returns all the available property values in the form of NSDictionary object where the key is the approperiate json key and the value is the value of the corresponding property
 */
</string>
			<key>forEachArrayOfCustomTypeProperty</key>
			<string>	if(self.&lt;!VarName!&gt; != nil){
		NSMutableArray * dictionaryElements = [NSMutableArray array];
		for(&lt;!ElementType!&gt; * &lt;!VarName!&gt;Element in self.&lt;!VarName!&gt;){
			[dictionaryElements addObject:[&lt;!VarName!&gt;Element toDictionary]];
		}
		dictionary[@"&lt;!JsonKeyName!&gt;"] = dictionaryElements;
	}
</string>
			<key>forEachCustomTypeProperty</key>
			<string>	if(self.&lt;!VarName!&gt; != nil){
		dictionary[@"&lt;!JsonKeyName!&gt;"] = [self.&lt;!VarName!&gt; toDictionary];
	}
</string>
			<key>forEachProperty</key>
			<string>	if(self.&lt;!VarName!&gt; != nil){
		dictionary[@"&lt;!JsonKeyName!&gt;"] = self.&lt;!VarName!&gt;;
	}
</string>
			<key>forEachPropertyWithSpecialStoringNeeds</key>
			<string>	dictionary[@"&lt;!JsonKeyName!&gt;"] = @(self.&lt;!VarName!&gt;);
</string>
			<key>returnStatement</key>
			<string>	return dictionary;
</string>
			<key>signature</key>
			<string>-(NSDictionary *)toDictionary</string>
		</dict>
	</array>
	<key>wordsToRemoveToGetArrayElementsType</key>
	<array>
		<string>NSArray</string>
		<string>NSMutableArray</string>
	</array>
</dict>
</plist>
